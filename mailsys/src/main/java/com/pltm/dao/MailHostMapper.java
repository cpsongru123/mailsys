package com.pltm.dao;

import com.pltm.dto.MailHost;
import com.pltm.dto.MailHostExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MailHostMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @SelectProvider(type=MailHostSqlProvider.class, method="countByExample")
    int countByExample(MailHostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @DeleteProvider(type=MailHostSqlProvider.class, method="deleteByExample")
    int deleteByExample(MailHostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @Delete({
        "delete from mail_host",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @Insert({
        "insert into mail_host (id, host_name, ",
        "smtp_host, smtp_host_port, ",
        "pop3_host, pop3_host_port)",
        "values (#{id,jdbcType=INTEGER}, #{hostName,jdbcType=VARCHAR}, ",
        "#{smtpHost,jdbcType=VARCHAR}, #{smtpHostPort,jdbcType=VARCHAR}, ",
        "#{pop3Host,jdbcType=VARCHAR}, #{pop3HostPort,jdbcType=VARCHAR})"
    })
    int insert(MailHost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @InsertProvider(type=MailHostSqlProvider.class, method="insertSelective")
    int insertSelective(MailHost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @SelectProvider(type=MailHostSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="host_name", property="hostName", jdbcType=JdbcType.VARCHAR),
        @Result(column="smtp_host", property="smtpHost", jdbcType=JdbcType.VARCHAR),
        @Result(column="smtp_host_port", property="smtpHostPort", jdbcType=JdbcType.VARCHAR),
        @Result(column="pop3_host", property="pop3Host", jdbcType=JdbcType.VARCHAR),
        @Result(column="pop3_host_port", property="pop3HostPort", jdbcType=JdbcType.VARCHAR)
    })
    List<MailHost> selectByExample(MailHostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @Select({
        "select",
        "id, host_name, smtp_host, smtp_host_port, pop3_host, pop3_host_port",
        "from mail_host",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="host_name", property="hostName", jdbcType=JdbcType.VARCHAR),
        @Result(column="smtp_host", property="smtpHost", jdbcType=JdbcType.VARCHAR),
        @Result(column="smtp_host_port", property="smtpHostPort", jdbcType=JdbcType.VARCHAR),
        @Result(column="pop3_host", property="pop3Host", jdbcType=JdbcType.VARCHAR),
        @Result(column="pop3_host_port", property="pop3HostPort", jdbcType=JdbcType.VARCHAR)
    })
    MailHost selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @UpdateProvider(type=MailHostSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MailHost record, @Param("example") MailHostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @UpdateProvider(type=MailHostSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MailHost record, @Param("example") MailHostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @UpdateProvider(type=MailHostSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MailHost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mail_host
     *
     * @mbggenerated Mon Mar 19 23:50:15 CST 2018
     */
    @Update({
        "update mail_host",
        "set host_name = #{hostName,jdbcType=VARCHAR},",
          "smtp_host = #{smtpHost,jdbcType=VARCHAR},",
          "smtp_host_port = #{smtpHostPort,jdbcType=VARCHAR},",
          "pop3_host = #{pop3Host,jdbcType=VARCHAR},",
          "pop3_host_port = #{pop3HostPort,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(MailHost record);
}